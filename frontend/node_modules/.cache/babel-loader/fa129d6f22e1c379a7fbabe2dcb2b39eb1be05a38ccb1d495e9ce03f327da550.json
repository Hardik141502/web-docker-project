{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import axios from\"axios\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[message,setMessage]=useState(\"\");useEffect(()=>{axios.get(\"http://localhost:5000/api/message\").then(res=>setMessage(res.data.message)).catch(err=>console.error(err));},[]);return/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:\"center\",marginTop:\"50px\"},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"React + Node.js + Docker\"}),/*#__PURE__*/_jsx(\"p\",{children:message})]});}export default App;","map":{"version":3,"names":["React","useEffect","useState","axios","jsx","_jsx","jsxs","_jsxs","App","message","setMessage","get","then","res","data","catch","err","console","error","style","textAlign","marginTop","children"],"sources":["/home/ubuntu/projects/web-docker-project/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/api/message\")\n      .then(res => setMessage(res.data.message))\n      .catch(err => console.error(err));\n  }, []);\n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\n      <h1>React + Node.js + Docker</h1>\n      <p>{message}</p>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAE1CD,SAAS,CAAC,IAAM,CACdE,KAAK,CAACQ,GAAG,CAAC,mCAAmC,CAAC,CAC3CC,IAAI,CAACC,GAAG,EAAIH,UAAU,CAACG,GAAG,CAACC,IAAI,CAACL,OAAO,CAAC,CAAC,CACzCM,KAAK,CAACC,GAAG,EAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC,CACrC,CAAC,CAAE,EAAE,CAAC,CAEN,mBACET,KAAA,QAAKY,KAAK,CAAE,CAAEC,SAAS,CAAE,QAAQ,CAAEC,SAAS,CAAE,MAAO,CAAE,CAAAC,QAAA,eACrDjB,IAAA,OAAAiB,QAAA,CAAI,0BAAwB,CAAI,CAAC,cACjCjB,IAAA,MAAAiB,QAAA,CAAIb,OAAO,CAAI,CAAC,EACb,CAAC,CAEV,CAEA,cAAe,CAAAD,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}